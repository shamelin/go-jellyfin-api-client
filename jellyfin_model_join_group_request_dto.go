/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
)

// checks if the JellyfinJoinGroupRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JellyfinJoinGroupRequestDto{}

// JellyfinJoinGroupRequestDto Class JoinGroupRequestDto.
type JellyfinJoinGroupRequestDto struct {
	// Gets or sets the group identifier.
	GroupId *string `json:"GroupId,omitempty"`
}

// NewJellyfinJoinGroupRequestDto instantiates a new JellyfinJoinGroupRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJellyfinJoinGroupRequestDto() *JellyfinJoinGroupRequestDto {
	this := JellyfinJoinGroupRequestDto{}
	return &this
}

// NewJellyfinJoinGroupRequestDtoWithDefaults instantiates a new JellyfinJoinGroupRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJellyfinJoinGroupRequestDtoWithDefaults() *JellyfinJoinGroupRequestDto {
	this := JellyfinJoinGroupRequestDto{}
	return &this
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *JellyfinJoinGroupRequestDto) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinJoinGroupRequestDto) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *JellyfinJoinGroupRequestDto) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *JellyfinJoinGroupRequestDto) SetGroupId(v string) {
	o.GroupId = &v
}

func (o JellyfinJoinGroupRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JellyfinJoinGroupRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupId) {
		toSerialize["GroupId"] = o.GroupId
	}
	return toSerialize, nil
}

type NullableJellyfinJoinGroupRequestDto struct {
	value *JellyfinJoinGroupRequestDto
	isSet bool
}

func (v NullableJellyfinJoinGroupRequestDto) Get() *JellyfinJoinGroupRequestDto {
	return v.value
}

func (v *NullableJellyfinJoinGroupRequestDto) Set(val *JellyfinJoinGroupRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinJoinGroupRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinJoinGroupRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinJoinGroupRequestDto(val *JellyfinJoinGroupRequestDto) *NullableJellyfinJoinGroupRequestDto {
	return &NullableJellyfinJoinGroupRequestDto{value: val, isSet: true}
}

func (v NullableJellyfinJoinGroupRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinJoinGroupRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


