/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
	"fmt"
)

// JellyfinSessionMessageType The different kinds of messages that are used in the WebSocket api.
type JellyfinSessionMessageType string

// List of SessionMessageType
const (
	FORCE_KEEP_ALIVE JellyfinSessionMessageType = "ForceKeepAlive"
	GENERAL_COMMAND JellyfinSessionMessageType = "GeneralCommand"
	USER_DATA_CHANGED JellyfinSessionMessageType = "UserDataChanged"
	SESSIONS JellyfinSessionMessageType = "Sessions"
	PLAY JellyfinSessionMessageType = "Play"
	SYNC_PLAY_COMMAND JellyfinSessionMessageType = "SyncPlayCommand"
	SYNC_PLAY_GROUP_UPDATE JellyfinSessionMessageType = "SyncPlayGroupUpdate"
	PLAYSTATE JellyfinSessionMessageType = "Playstate"
	RESTART_REQUIRED JellyfinSessionMessageType = "RestartRequired"
	SERVER_SHUTTING_DOWN JellyfinSessionMessageType = "ServerShuttingDown"
	SERVER_RESTARTING JellyfinSessionMessageType = "ServerRestarting"
	LIBRARY_CHANGED JellyfinSessionMessageType = "LibraryChanged"
	USER_DELETED JellyfinSessionMessageType = "UserDeleted"
	USER_UPDATED JellyfinSessionMessageType = "UserUpdated"
	SERIES_TIMER_CREATED JellyfinSessionMessageType = "SeriesTimerCreated"
	TIMER_CREATED JellyfinSessionMessageType = "TimerCreated"
	SERIES_TIMER_CANCELLED JellyfinSessionMessageType = "SeriesTimerCancelled"
	TIMER_CANCELLED JellyfinSessionMessageType = "TimerCancelled"
	REFRESH_PROGRESS JellyfinSessionMessageType = "RefreshProgress"
	SCHEDULED_TASK_ENDED JellyfinSessionMessageType = "ScheduledTaskEnded"
	PACKAGE_INSTALLATION_CANCELLED JellyfinSessionMessageType = "PackageInstallationCancelled"
	PACKAGE_INSTALLATION_FAILED JellyfinSessionMessageType = "PackageInstallationFailed"
	PACKAGE_INSTALLATION_COMPLETED JellyfinSessionMessageType = "PackageInstallationCompleted"
	PACKAGE_INSTALLING JellyfinSessionMessageType = "PackageInstalling"
	PACKAGE_UNINSTALLED JellyfinSessionMessageType = "PackageUninstalled"
	ACTIVITY_LOG_ENTRY JellyfinSessionMessageType = "ActivityLogEntry"
	SCHEDULED_TASKS_INFO JellyfinSessionMessageType = "ScheduledTasksInfo"
	ACTIVITY_LOG_ENTRY_START JellyfinSessionMessageType = "ActivityLogEntryStart"
	ACTIVITY_LOG_ENTRY_STOP JellyfinSessionMessageType = "ActivityLogEntryStop"
	SESSIONS_START JellyfinSessionMessageType = "SessionsStart"
	SESSIONS_STOP JellyfinSessionMessageType = "SessionsStop"
	SCHEDULED_TASKS_INFO_START JellyfinSessionMessageType = "ScheduledTasksInfoStart"
	SCHEDULED_TASKS_INFO_STOP JellyfinSessionMessageType = "ScheduledTasksInfoStop"
	KEEP_ALIVE JellyfinSessionMessageType = "KeepAlive"
)

// All allowed values of JellyfinSessionMessageType enum
var AllowedJellyfinSessionMessageTypeEnumValues = []JellyfinSessionMessageType{
	"ForceKeepAlive",
	"GeneralCommand",
	"UserDataChanged",
	"Sessions",
	"Play",
	"SyncPlayCommand",
	"SyncPlayGroupUpdate",
	"Playstate",
	"RestartRequired",
	"ServerShuttingDown",
	"ServerRestarting",
	"LibraryChanged",
	"UserDeleted",
	"UserUpdated",
	"SeriesTimerCreated",
	"TimerCreated",
	"SeriesTimerCancelled",
	"TimerCancelled",
	"RefreshProgress",
	"ScheduledTaskEnded",
	"PackageInstallationCancelled",
	"PackageInstallationFailed",
	"PackageInstallationCompleted",
	"PackageInstalling",
	"PackageUninstalled",
	"ActivityLogEntry",
	"ScheduledTasksInfo",
	"ActivityLogEntryStart",
	"ActivityLogEntryStop",
	"SessionsStart",
	"SessionsStop",
	"ScheduledTasksInfoStart",
	"ScheduledTasksInfoStop",
	"KeepAlive",
}

func (v *JellyfinSessionMessageType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := JellyfinSessionMessageType(value)
	for _, existing := range AllowedJellyfinSessionMessageTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid JellyfinSessionMessageType", value)
}

// NewJellyfinSessionMessageTypeFromValue returns a pointer to a valid JellyfinSessionMessageType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewJellyfinSessionMessageTypeFromValue(v string) (*JellyfinSessionMessageType, error) {
	ev := JellyfinSessionMessageType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for JellyfinSessionMessageType: valid values are %v", v, AllowedJellyfinSessionMessageTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v JellyfinSessionMessageType) IsValid() bool {
	for _, existing := range AllowedJellyfinSessionMessageTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SessionMessageType value
func (v JellyfinSessionMessageType) Ptr() *JellyfinSessionMessageType {
	return &v
}

type NullableJellyfinSessionMessageType struct {
	value *JellyfinSessionMessageType
	isSet bool
}

func (v NullableJellyfinSessionMessageType) Get() *JellyfinSessionMessageType {
	return v.value
}

func (v *NullableJellyfinSessionMessageType) Set(val *JellyfinSessionMessageType) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinSessionMessageType) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinSessionMessageType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinSessionMessageType(val *JellyfinSessionMessageType) *NullableJellyfinSessionMessageType {
	return &NullableJellyfinSessionMessageType{value: val, isSet: true}
}

func (v NullableJellyfinSessionMessageType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinSessionMessageType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

