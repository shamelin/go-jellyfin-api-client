/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// JellyfinOutboundWebSocketMessage - Represents the list of possible outbound websocket types
type JellyfinOutboundWebSocketMessage struct {
	JellyfinActivityLogEntryMessage *JellyfinActivityLogEntryMessage
	JellyfinForceKeepAliveMessage *JellyfinForceKeepAliveMessage
	JellyfinGeneralCommandMessage *JellyfinGeneralCommandMessage
	JellyfinLibraryChangedMessage *JellyfinLibraryChangedMessage
	JellyfinOutboundKeepAliveMessage *JellyfinOutboundKeepAliveMessage
	JellyfinPlayMessage *JellyfinPlayMessage
	JellyfinPlaystateMessage *JellyfinPlaystateMessage
	JellyfinPluginInstallationCancelledMessage *JellyfinPluginInstallationCancelledMessage
	JellyfinPluginInstallationCompletedMessage *JellyfinPluginInstallationCompletedMessage
	JellyfinPluginInstallationFailedMessage *JellyfinPluginInstallationFailedMessage
	JellyfinPluginInstallingMessage *JellyfinPluginInstallingMessage
	JellyfinPluginUninstalledMessage *JellyfinPluginUninstalledMessage
	JellyfinRefreshProgressMessage *JellyfinRefreshProgressMessage
	JellyfinRestartRequiredMessage *JellyfinRestartRequiredMessage
	JellyfinScheduledTaskEndedMessage *JellyfinScheduledTaskEndedMessage
	JellyfinScheduledTasksInfoMessage *JellyfinScheduledTasksInfoMessage
	JellyfinSeriesTimerCancelledMessage *JellyfinSeriesTimerCancelledMessage
	JellyfinSeriesTimerCreatedMessage *JellyfinSeriesTimerCreatedMessage
	JellyfinServerRestartingMessage *JellyfinServerRestartingMessage
	JellyfinServerShuttingDownMessage *JellyfinServerShuttingDownMessage
	JellyfinSessionsMessage *JellyfinSessionsMessage
	JellyfinSyncPlayCommandMessage *JellyfinSyncPlayCommandMessage
	JellyfinSyncPlayGroupUpdateCommandMessage *JellyfinSyncPlayGroupUpdateCommandMessage
	JellyfinTimerCancelledMessage *JellyfinTimerCancelledMessage
	JellyfinTimerCreatedMessage *JellyfinTimerCreatedMessage
	JellyfinUserDataChangedMessage *JellyfinUserDataChangedMessage
	JellyfinUserDeletedMessage *JellyfinUserDeletedMessage
	JellyfinUserUpdatedMessage *JellyfinUserUpdatedMessage
}

// JellyfinActivityLogEntryMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinActivityLogEntryMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinActivityLogEntryMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinActivityLogEntryMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinActivityLogEntryMessage: v,
	}
}

// JellyfinForceKeepAliveMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinForceKeepAliveMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinForceKeepAliveMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinForceKeepAliveMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinForceKeepAliveMessage: v,
	}
}

// JellyfinGeneralCommandMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinGeneralCommandMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinGeneralCommandMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinGeneralCommandMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinGeneralCommandMessage: v,
	}
}

// JellyfinLibraryChangedMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinLibraryChangedMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinLibraryChangedMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinLibraryChangedMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinLibraryChangedMessage: v,
	}
}

// JellyfinOutboundKeepAliveMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinOutboundKeepAliveMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinOutboundKeepAliveMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinOutboundKeepAliveMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinOutboundKeepAliveMessage: v,
	}
}

// JellyfinPlayMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinPlayMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinPlayMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinPlayMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinPlayMessage: v,
	}
}

// JellyfinPlaystateMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinPlaystateMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinPlaystateMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinPlaystateMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinPlaystateMessage: v,
	}
}

// JellyfinPluginInstallationCancelledMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinPluginInstallationCancelledMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinPluginInstallationCancelledMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinPluginInstallationCancelledMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinPluginInstallationCancelledMessage: v,
	}
}

// JellyfinPluginInstallationCompletedMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinPluginInstallationCompletedMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinPluginInstallationCompletedMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinPluginInstallationCompletedMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinPluginInstallationCompletedMessage: v,
	}
}

// JellyfinPluginInstallationFailedMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinPluginInstallationFailedMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinPluginInstallationFailedMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinPluginInstallationFailedMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinPluginInstallationFailedMessage: v,
	}
}

// JellyfinPluginInstallingMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinPluginInstallingMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinPluginInstallingMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinPluginInstallingMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinPluginInstallingMessage: v,
	}
}

// JellyfinPluginUninstalledMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinPluginUninstalledMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinPluginUninstalledMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinPluginUninstalledMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinPluginUninstalledMessage: v,
	}
}

// JellyfinRefreshProgressMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinRefreshProgressMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinRefreshProgressMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinRefreshProgressMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinRefreshProgressMessage: v,
	}
}

// JellyfinRestartRequiredMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinRestartRequiredMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinRestartRequiredMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinRestartRequiredMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinRestartRequiredMessage: v,
	}
}

// JellyfinScheduledTaskEndedMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinScheduledTaskEndedMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinScheduledTaskEndedMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinScheduledTaskEndedMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinScheduledTaskEndedMessage: v,
	}
}

// JellyfinScheduledTasksInfoMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinScheduledTasksInfoMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinScheduledTasksInfoMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinScheduledTasksInfoMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinScheduledTasksInfoMessage: v,
	}
}

// JellyfinSeriesTimerCancelledMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinSeriesTimerCancelledMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinSeriesTimerCancelledMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinSeriesTimerCancelledMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinSeriesTimerCancelledMessage: v,
	}
}

// JellyfinSeriesTimerCreatedMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinSeriesTimerCreatedMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinSeriesTimerCreatedMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinSeriesTimerCreatedMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinSeriesTimerCreatedMessage: v,
	}
}

// JellyfinServerRestartingMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinServerRestartingMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinServerRestartingMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinServerRestartingMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinServerRestartingMessage: v,
	}
}

// JellyfinServerShuttingDownMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinServerShuttingDownMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinServerShuttingDownMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinServerShuttingDownMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinServerShuttingDownMessage: v,
	}
}

// JellyfinSessionsMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinSessionsMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinSessionsMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinSessionsMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinSessionsMessage: v,
	}
}

// JellyfinSyncPlayCommandMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinSyncPlayCommandMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinSyncPlayCommandMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinSyncPlayCommandMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinSyncPlayCommandMessage: v,
	}
}

// JellyfinSyncPlayGroupUpdateCommandMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinSyncPlayGroupUpdateCommandMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinSyncPlayGroupUpdateCommandMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinSyncPlayGroupUpdateCommandMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinSyncPlayGroupUpdateCommandMessage: v,
	}
}

// JellyfinTimerCancelledMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinTimerCancelledMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinTimerCancelledMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinTimerCancelledMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinTimerCancelledMessage: v,
	}
}

// JellyfinTimerCreatedMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinTimerCreatedMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinTimerCreatedMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinTimerCreatedMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinTimerCreatedMessage: v,
	}
}

// JellyfinUserDataChangedMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinUserDataChangedMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinUserDataChangedMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinUserDataChangedMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinUserDataChangedMessage: v,
	}
}

// JellyfinUserDeletedMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinUserDeletedMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinUserDeletedMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinUserDeletedMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinUserDeletedMessage: v,
	}
}

// JellyfinUserUpdatedMessageAsJellyfinOutboundWebSocketMessage is a convenience function that returns JellyfinUserUpdatedMessage wrapped in JellyfinOutboundWebSocketMessage
func JellyfinUserUpdatedMessageAsJellyfinOutboundWebSocketMessage(v *JellyfinUserUpdatedMessage) JellyfinOutboundWebSocketMessage {
	return JellyfinOutboundWebSocketMessage{
		JellyfinUserUpdatedMessage: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *JellyfinOutboundWebSocketMessage) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into JellyfinActivityLogEntryMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinActivityLogEntryMessage)
	if err == nil {
		jsonJellyfinActivityLogEntryMessage, _ := json.Marshal(dst.JellyfinActivityLogEntryMessage)
		if string(jsonJellyfinActivityLogEntryMessage) == "{}" { // empty struct
			dst.JellyfinActivityLogEntryMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinActivityLogEntryMessage); err != nil {
				dst.JellyfinActivityLogEntryMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinActivityLogEntryMessage = nil
	}

	// try to unmarshal data into JellyfinForceKeepAliveMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinForceKeepAliveMessage)
	if err == nil {
		jsonJellyfinForceKeepAliveMessage, _ := json.Marshal(dst.JellyfinForceKeepAliveMessage)
		if string(jsonJellyfinForceKeepAliveMessage) == "{}" { // empty struct
			dst.JellyfinForceKeepAliveMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinForceKeepAliveMessage); err != nil {
				dst.JellyfinForceKeepAliveMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinForceKeepAliveMessage = nil
	}

	// try to unmarshal data into JellyfinGeneralCommandMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinGeneralCommandMessage)
	if err == nil {
		jsonJellyfinGeneralCommandMessage, _ := json.Marshal(dst.JellyfinGeneralCommandMessage)
		if string(jsonJellyfinGeneralCommandMessage) == "{}" { // empty struct
			dst.JellyfinGeneralCommandMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinGeneralCommandMessage); err != nil {
				dst.JellyfinGeneralCommandMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinGeneralCommandMessage = nil
	}

	// try to unmarshal data into JellyfinLibraryChangedMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinLibraryChangedMessage)
	if err == nil {
		jsonJellyfinLibraryChangedMessage, _ := json.Marshal(dst.JellyfinLibraryChangedMessage)
		if string(jsonJellyfinLibraryChangedMessage) == "{}" { // empty struct
			dst.JellyfinLibraryChangedMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinLibraryChangedMessage); err != nil {
				dst.JellyfinLibraryChangedMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinLibraryChangedMessage = nil
	}

	// try to unmarshal data into JellyfinOutboundKeepAliveMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinOutboundKeepAliveMessage)
	if err == nil {
		jsonJellyfinOutboundKeepAliveMessage, _ := json.Marshal(dst.JellyfinOutboundKeepAliveMessage)
		if string(jsonJellyfinOutboundKeepAliveMessage) == "{}" { // empty struct
			dst.JellyfinOutboundKeepAliveMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinOutboundKeepAliveMessage); err != nil {
				dst.JellyfinOutboundKeepAliveMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinOutboundKeepAliveMessage = nil
	}

	// try to unmarshal data into JellyfinPlayMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinPlayMessage)
	if err == nil {
		jsonJellyfinPlayMessage, _ := json.Marshal(dst.JellyfinPlayMessage)
		if string(jsonJellyfinPlayMessage) == "{}" { // empty struct
			dst.JellyfinPlayMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinPlayMessage); err != nil {
				dst.JellyfinPlayMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinPlayMessage = nil
	}

	// try to unmarshal data into JellyfinPlaystateMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinPlaystateMessage)
	if err == nil {
		jsonJellyfinPlaystateMessage, _ := json.Marshal(dst.JellyfinPlaystateMessage)
		if string(jsonJellyfinPlaystateMessage) == "{}" { // empty struct
			dst.JellyfinPlaystateMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinPlaystateMessage); err != nil {
				dst.JellyfinPlaystateMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinPlaystateMessage = nil
	}

	// try to unmarshal data into JellyfinPluginInstallationCancelledMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinPluginInstallationCancelledMessage)
	if err == nil {
		jsonJellyfinPluginInstallationCancelledMessage, _ := json.Marshal(dst.JellyfinPluginInstallationCancelledMessage)
		if string(jsonJellyfinPluginInstallationCancelledMessage) == "{}" { // empty struct
			dst.JellyfinPluginInstallationCancelledMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinPluginInstallationCancelledMessage); err != nil {
				dst.JellyfinPluginInstallationCancelledMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinPluginInstallationCancelledMessage = nil
	}

	// try to unmarshal data into JellyfinPluginInstallationCompletedMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinPluginInstallationCompletedMessage)
	if err == nil {
		jsonJellyfinPluginInstallationCompletedMessage, _ := json.Marshal(dst.JellyfinPluginInstallationCompletedMessage)
		if string(jsonJellyfinPluginInstallationCompletedMessage) == "{}" { // empty struct
			dst.JellyfinPluginInstallationCompletedMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinPluginInstallationCompletedMessage); err != nil {
				dst.JellyfinPluginInstallationCompletedMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinPluginInstallationCompletedMessage = nil
	}

	// try to unmarshal data into JellyfinPluginInstallationFailedMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinPluginInstallationFailedMessage)
	if err == nil {
		jsonJellyfinPluginInstallationFailedMessage, _ := json.Marshal(dst.JellyfinPluginInstallationFailedMessage)
		if string(jsonJellyfinPluginInstallationFailedMessage) == "{}" { // empty struct
			dst.JellyfinPluginInstallationFailedMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinPluginInstallationFailedMessage); err != nil {
				dst.JellyfinPluginInstallationFailedMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinPluginInstallationFailedMessage = nil
	}

	// try to unmarshal data into JellyfinPluginInstallingMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinPluginInstallingMessage)
	if err == nil {
		jsonJellyfinPluginInstallingMessage, _ := json.Marshal(dst.JellyfinPluginInstallingMessage)
		if string(jsonJellyfinPluginInstallingMessage) == "{}" { // empty struct
			dst.JellyfinPluginInstallingMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinPluginInstallingMessage); err != nil {
				dst.JellyfinPluginInstallingMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinPluginInstallingMessage = nil
	}

	// try to unmarshal data into JellyfinPluginUninstalledMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinPluginUninstalledMessage)
	if err == nil {
		jsonJellyfinPluginUninstalledMessage, _ := json.Marshal(dst.JellyfinPluginUninstalledMessage)
		if string(jsonJellyfinPluginUninstalledMessage) == "{}" { // empty struct
			dst.JellyfinPluginUninstalledMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinPluginUninstalledMessage); err != nil {
				dst.JellyfinPluginUninstalledMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinPluginUninstalledMessage = nil
	}

	// try to unmarshal data into JellyfinRefreshProgressMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinRefreshProgressMessage)
	if err == nil {
		jsonJellyfinRefreshProgressMessage, _ := json.Marshal(dst.JellyfinRefreshProgressMessage)
		if string(jsonJellyfinRefreshProgressMessage) == "{}" { // empty struct
			dst.JellyfinRefreshProgressMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinRefreshProgressMessage); err != nil {
				dst.JellyfinRefreshProgressMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinRefreshProgressMessage = nil
	}

	// try to unmarshal data into JellyfinRestartRequiredMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinRestartRequiredMessage)
	if err == nil {
		jsonJellyfinRestartRequiredMessage, _ := json.Marshal(dst.JellyfinRestartRequiredMessage)
		if string(jsonJellyfinRestartRequiredMessage) == "{}" { // empty struct
			dst.JellyfinRestartRequiredMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinRestartRequiredMessage); err != nil {
				dst.JellyfinRestartRequiredMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinRestartRequiredMessage = nil
	}

	// try to unmarshal data into JellyfinScheduledTaskEndedMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinScheduledTaskEndedMessage)
	if err == nil {
		jsonJellyfinScheduledTaskEndedMessage, _ := json.Marshal(dst.JellyfinScheduledTaskEndedMessage)
		if string(jsonJellyfinScheduledTaskEndedMessage) == "{}" { // empty struct
			dst.JellyfinScheduledTaskEndedMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinScheduledTaskEndedMessage); err != nil {
				dst.JellyfinScheduledTaskEndedMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinScheduledTaskEndedMessage = nil
	}

	// try to unmarshal data into JellyfinScheduledTasksInfoMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinScheduledTasksInfoMessage)
	if err == nil {
		jsonJellyfinScheduledTasksInfoMessage, _ := json.Marshal(dst.JellyfinScheduledTasksInfoMessage)
		if string(jsonJellyfinScheduledTasksInfoMessage) == "{}" { // empty struct
			dst.JellyfinScheduledTasksInfoMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinScheduledTasksInfoMessage); err != nil {
				dst.JellyfinScheduledTasksInfoMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinScheduledTasksInfoMessage = nil
	}

	// try to unmarshal data into JellyfinSeriesTimerCancelledMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinSeriesTimerCancelledMessage)
	if err == nil {
		jsonJellyfinSeriesTimerCancelledMessage, _ := json.Marshal(dst.JellyfinSeriesTimerCancelledMessage)
		if string(jsonJellyfinSeriesTimerCancelledMessage) == "{}" { // empty struct
			dst.JellyfinSeriesTimerCancelledMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinSeriesTimerCancelledMessage); err != nil {
				dst.JellyfinSeriesTimerCancelledMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinSeriesTimerCancelledMessage = nil
	}

	// try to unmarshal data into JellyfinSeriesTimerCreatedMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinSeriesTimerCreatedMessage)
	if err == nil {
		jsonJellyfinSeriesTimerCreatedMessage, _ := json.Marshal(dst.JellyfinSeriesTimerCreatedMessage)
		if string(jsonJellyfinSeriesTimerCreatedMessage) == "{}" { // empty struct
			dst.JellyfinSeriesTimerCreatedMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinSeriesTimerCreatedMessage); err != nil {
				dst.JellyfinSeriesTimerCreatedMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinSeriesTimerCreatedMessage = nil
	}

	// try to unmarshal data into JellyfinServerRestartingMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinServerRestartingMessage)
	if err == nil {
		jsonJellyfinServerRestartingMessage, _ := json.Marshal(dst.JellyfinServerRestartingMessage)
		if string(jsonJellyfinServerRestartingMessage) == "{}" { // empty struct
			dst.JellyfinServerRestartingMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinServerRestartingMessage); err != nil {
				dst.JellyfinServerRestartingMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinServerRestartingMessage = nil
	}

	// try to unmarshal data into JellyfinServerShuttingDownMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinServerShuttingDownMessage)
	if err == nil {
		jsonJellyfinServerShuttingDownMessage, _ := json.Marshal(dst.JellyfinServerShuttingDownMessage)
		if string(jsonJellyfinServerShuttingDownMessage) == "{}" { // empty struct
			dst.JellyfinServerShuttingDownMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinServerShuttingDownMessage); err != nil {
				dst.JellyfinServerShuttingDownMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinServerShuttingDownMessage = nil
	}

	// try to unmarshal data into JellyfinSessionsMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinSessionsMessage)
	if err == nil {
		jsonJellyfinSessionsMessage, _ := json.Marshal(dst.JellyfinSessionsMessage)
		if string(jsonJellyfinSessionsMessage) == "{}" { // empty struct
			dst.JellyfinSessionsMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinSessionsMessage); err != nil {
				dst.JellyfinSessionsMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinSessionsMessage = nil
	}

	// try to unmarshal data into JellyfinSyncPlayCommandMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinSyncPlayCommandMessage)
	if err == nil {
		jsonJellyfinSyncPlayCommandMessage, _ := json.Marshal(dst.JellyfinSyncPlayCommandMessage)
		if string(jsonJellyfinSyncPlayCommandMessage) == "{}" { // empty struct
			dst.JellyfinSyncPlayCommandMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinSyncPlayCommandMessage); err != nil {
				dst.JellyfinSyncPlayCommandMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinSyncPlayCommandMessage = nil
	}

	// try to unmarshal data into JellyfinSyncPlayGroupUpdateCommandMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinSyncPlayGroupUpdateCommandMessage)
	if err == nil {
		jsonJellyfinSyncPlayGroupUpdateCommandMessage, _ := json.Marshal(dst.JellyfinSyncPlayGroupUpdateCommandMessage)
		if string(jsonJellyfinSyncPlayGroupUpdateCommandMessage) == "{}" { // empty struct
			dst.JellyfinSyncPlayGroupUpdateCommandMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinSyncPlayGroupUpdateCommandMessage); err != nil {
				dst.JellyfinSyncPlayGroupUpdateCommandMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinSyncPlayGroupUpdateCommandMessage = nil
	}

	// try to unmarshal data into JellyfinTimerCancelledMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinTimerCancelledMessage)
	if err == nil {
		jsonJellyfinTimerCancelledMessage, _ := json.Marshal(dst.JellyfinTimerCancelledMessage)
		if string(jsonJellyfinTimerCancelledMessage) == "{}" { // empty struct
			dst.JellyfinTimerCancelledMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinTimerCancelledMessage); err != nil {
				dst.JellyfinTimerCancelledMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinTimerCancelledMessage = nil
	}

	// try to unmarshal data into JellyfinTimerCreatedMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinTimerCreatedMessage)
	if err == nil {
		jsonJellyfinTimerCreatedMessage, _ := json.Marshal(dst.JellyfinTimerCreatedMessage)
		if string(jsonJellyfinTimerCreatedMessage) == "{}" { // empty struct
			dst.JellyfinTimerCreatedMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinTimerCreatedMessage); err != nil {
				dst.JellyfinTimerCreatedMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinTimerCreatedMessage = nil
	}

	// try to unmarshal data into JellyfinUserDataChangedMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinUserDataChangedMessage)
	if err == nil {
		jsonJellyfinUserDataChangedMessage, _ := json.Marshal(dst.JellyfinUserDataChangedMessage)
		if string(jsonJellyfinUserDataChangedMessage) == "{}" { // empty struct
			dst.JellyfinUserDataChangedMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinUserDataChangedMessage); err != nil {
				dst.JellyfinUserDataChangedMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinUserDataChangedMessage = nil
	}

	// try to unmarshal data into JellyfinUserDeletedMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinUserDeletedMessage)
	if err == nil {
		jsonJellyfinUserDeletedMessage, _ := json.Marshal(dst.JellyfinUserDeletedMessage)
		if string(jsonJellyfinUserDeletedMessage) == "{}" { // empty struct
			dst.JellyfinUserDeletedMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinUserDeletedMessage); err != nil {
				dst.JellyfinUserDeletedMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinUserDeletedMessage = nil
	}

	// try to unmarshal data into JellyfinUserUpdatedMessage
	err = newStrictDecoder(data).Decode(&dst.JellyfinUserUpdatedMessage)
	if err == nil {
		jsonJellyfinUserUpdatedMessage, _ := json.Marshal(dst.JellyfinUserUpdatedMessage)
		if string(jsonJellyfinUserUpdatedMessage) == "{}" { // empty struct
			dst.JellyfinUserUpdatedMessage = nil
		} else {
			if err = validator.Validate(dst.JellyfinUserUpdatedMessage); err != nil {
				dst.JellyfinUserUpdatedMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.JellyfinUserUpdatedMessage = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.JellyfinActivityLogEntryMessage = nil
		dst.JellyfinForceKeepAliveMessage = nil
		dst.JellyfinGeneralCommandMessage = nil
		dst.JellyfinLibraryChangedMessage = nil
		dst.JellyfinOutboundKeepAliveMessage = nil
		dst.JellyfinPlayMessage = nil
		dst.JellyfinPlaystateMessage = nil
		dst.JellyfinPluginInstallationCancelledMessage = nil
		dst.JellyfinPluginInstallationCompletedMessage = nil
		dst.JellyfinPluginInstallationFailedMessage = nil
		dst.JellyfinPluginInstallingMessage = nil
		dst.JellyfinPluginUninstalledMessage = nil
		dst.JellyfinRefreshProgressMessage = nil
		dst.JellyfinRestartRequiredMessage = nil
		dst.JellyfinScheduledTaskEndedMessage = nil
		dst.JellyfinScheduledTasksInfoMessage = nil
		dst.JellyfinSeriesTimerCancelledMessage = nil
		dst.JellyfinSeriesTimerCreatedMessage = nil
		dst.JellyfinServerRestartingMessage = nil
		dst.JellyfinServerShuttingDownMessage = nil
		dst.JellyfinSessionsMessage = nil
		dst.JellyfinSyncPlayCommandMessage = nil
		dst.JellyfinSyncPlayGroupUpdateCommandMessage = nil
		dst.JellyfinTimerCancelledMessage = nil
		dst.JellyfinTimerCreatedMessage = nil
		dst.JellyfinUserDataChangedMessage = nil
		dst.JellyfinUserDeletedMessage = nil
		dst.JellyfinUserUpdatedMessage = nil

		return fmt.Errorf("data matches more than one schema in oneOf(JellyfinOutboundWebSocketMessage)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(JellyfinOutboundWebSocketMessage)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src JellyfinOutboundWebSocketMessage) MarshalJSON() ([]byte, error) {
	if src.JellyfinActivityLogEntryMessage != nil {
		return json.Marshal(&src.JellyfinActivityLogEntryMessage)
	}

	if src.JellyfinForceKeepAliveMessage != nil {
		return json.Marshal(&src.JellyfinForceKeepAliveMessage)
	}

	if src.JellyfinGeneralCommandMessage != nil {
		return json.Marshal(&src.JellyfinGeneralCommandMessage)
	}

	if src.JellyfinLibraryChangedMessage != nil {
		return json.Marshal(&src.JellyfinLibraryChangedMessage)
	}

	if src.JellyfinOutboundKeepAliveMessage != nil {
		return json.Marshal(&src.JellyfinOutboundKeepAliveMessage)
	}

	if src.JellyfinPlayMessage != nil {
		return json.Marshal(&src.JellyfinPlayMessage)
	}

	if src.JellyfinPlaystateMessage != nil {
		return json.Marshal(&src.JellyfinPlaystateMessage)
	}

	if src.JellyfinPluginInstallationCancelledMessage != nil {
		return json.Marshal(&src.JellyfinPluginInstallationCancelledMessage)
	}

	if src.JellyfinPluginInstallationCompletedMessage != nil {
		return json.Marshal(&src.JellyfinPluginInstallationCompletedMessage)
	}

	if src.JellyfinPluginInstallationFailedMessage != nil {
		return json.Marshal(&src.JellyfinPluginInstallationFailedMessage)
	}

	if src.JellyfinPluginInstallingMessage != nil {
		return json.Marshal(&src.JellyfinPluginInstallingMessage)
	}

	if src.JellyfinPluginUninstalledMessage != nil {
		return json.Marshal(&src.JellyfinPluginUninstalledMessage)
	}

	if src.JellyfinRefreshProgressMessage != nil {
		return json.Marshal(&src.JellyfinRefreshProgressMessage)
	}

	if src.JellyfinRestartRequiredMessage != nil {
		return json.Marshal(&src.JellyfinRestartRequiredMessage)
	}

	if src.JellyfinScheduledTaskEndedMessage != nil {
		return json.Marshal(&src.JellyfinScheduledTaskEndedMessage)
	}

	if src.JellyfinScheduledTasksInfoMessage != nil {
		return json.Marshal(&src.JellyfinScheduledTasksInfoMessage)
	}

	if src.JellyfinSeriesTimerCancelledMessage != nil {
		return json.Marshal(&src.JellyfinSeriesTimerCancelledMessage)
	}

	if src.JellyfinSeriesTimerCreatedMessage != nil {
		return json.Marshal(&src.JellyfinSeriesTimerCreatedMessage)
	}

	if src.JellyfinServerRestartingMessage != nil {
		return json.Marshal(&src.JellyfinServerRestartingMessage)
	}

	if src.JellyfinServerShuttingDownMessage != nil {
		return json.Marshal(&src.JellyfinServerShuttingDownMessage)
	}

	if src.JellyfinSessionsMessage != nil {
		return json.Marshal(&src.JellyfinSessionsMessage)
	}

	if src.JellyfinSyncPlayCommandMessage != nil {
		return json.Marshal(&src.JellyfinSyncPlayCommandMessage)
	}

	if src.JellyfinSyncPlayGroupUpdateCommandMessage != nil {
		return json.Marshal(&src.JellyfinSyncPlayGroupUpdateCommandMessage)
	}

	if src.JellyfinTimerCancelledMessage != nil {
		return json.Marshal(&src.JellyfinTimerCancelledMessage)
	}

	if src.JellyfinTimerCreatedMessage != nil {
		return json.Marshal(&src.JellyfinTimerCreatedMessage)
	}

	if src.JellyfinUserDataChangedMessage != nil {
		return json.Marshal(&src.JellyfinUserDataChangedMessage)
	}

	if src.JellyfinUserDeletedMessage != nil {
		return json.Marshal(&src.JellyfinUserDeletedMessage)
	}

	if src.JellyfinUserUpdatedMessage != nil {
		return json.Marshal(&src.JellyfinUserUpdatedMessage)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *JellyfinOutboundWebSocketMessage) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.JellyfinActivityLogEntryMessage != nil {
		return obj.JellyfinActivityLogEntryMessage
	}

	if obj.JellyfinForceKeepAliveMessage != nil {
		return obj.JellyfinForceKeepAliveMessage
	}

	if obj.JellyfinGeneralCommandMessage != nil {
		return obj.JellyfinGeneralCommandMessage
	}

	if obj.JellyfinLibraryChangedMessage != nil {
		return obj.JellyfinLibraryChangedMessage
	}

	if obj.JellyfinOutboundKeepAliveMessage != nil {
		return obj.JellyfinOutboundKeepAliveMessage
	}

	if obj.JellyfinPlayMessage != nil {
		return obj.JellyfinPlayMessage
	}

	if obj.JellyfinPlaystateMessage != nil {
		return obj.JellyfinPlaystateMessage
	}

	if obj.JellyfinPluginInstallationCancelledMessage != nil {
		return obj.JellyfinPluginInstallationCancelledMessage
	}

	if obj.JellyfinPluginInstallationCompletedMessage != nil {
		return obj.JellyfinPluginInstallationCompletedMessage
	}

	if obj.JellyfinPluginInstallationFailedMessage != nil {
		return obj.JellyfinPluginInstallationFailedMessage
	}

	if obj.JellyfinPluginInstallingMessage != nil {
		return obj.JellyfinPluginInstallingMessage
	}

	if obj.JellyfinPluginUninstalledMessage != nil {
		return obj.JellyfinPluginUninstalledMessage
	}

	if obj.JellyfinRefreshProgressMessage != nil {
		return obj.JellyfinRefreshProgressMessage
	}

	if obj.JellyfinRestartRequiredMessage != nil {
		return obj.JellyfinRestartRequiredMessage
	}

	if obj.JellyfinScheduledTaskEndedMessage != nil {
		return obj.JellyfinScheduledTaskEndedMessage
	}

	if obj.JellyfinScheduledTasksInfoMessage != nil {
		return obj.JellyfinScheduledTasksInfoMessage
	}

	if obj.JellyfinSeriesTimerCancelledMessage != nil {
		return obj.JellyfinSeriesTimerCancelledMessage
	}

	if obj.JellyfinSeriesTimerCreatedMessage != nil {
		return obj.JellyfinSeriesTimerCreatedMessage
	}

	if obj.JellyfinServerRestartingMessage != nil {
		return obj.JellyfinServerRestartingMessage
	}

	if obj.JellyfinServerShuttingDownMessage != nil {
		return obj.JellyfinServerShuttingDownMessage
	}

	if obj.JellyfinSessionsMessage != nil {
		return obj.JellyfinSessionsMessage
	}

	if obj.JellyfinSyncPlayCommandMessage != nil {
		return obj.JellyfinSyncPlayCommandMessage
	}

	if obj.JellyfinSyncPlayGroupUpdateCommandMessage != nil {
		return obj.JellyfinSyncPlayGroupUpdateCommandMessage
	}

	if obj.JellyfinTimerCancelledMessage != nil {
		return obj.JellyfinTimerCancelledMessage
	}

	if obj.JellyfinTimerCreatedMessage != nil {
		return obj.JellyfinTimerCreatedMessage
	}

	if obj.JellyfinUserDataChangedMessage != nil {
		return obj.JellyfinUserDataChangedMessage
	}

	if obj.JellyfinUserDeletedMessage != nil {
		return obj.JellyfinUserDeletedMessage
	}

	if obj.JellyfinUserUpdatedMessage != nil {
		return obj.JellyfinUserUpdatedMessage
	}

	// all schemas are nil
	return nil
}

type NullableJellyfinOutboundWebSocketMessage struct {
	value *JellyfinOutboundWebSocketMessage
	isSet bool
}

func (v NullableJellyfinOutboundWebSocketMessage) Get() *JellyfinOutboundWebSocketMessage {
	return v.value
}

func (v *NullableJellyfinOutboundWebSocketMessage) Set(val *JellyfinOutboundWebSocketMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinOutboundWebSocketMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinOutboundWebSocketMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinOutboundWebSocketMessage(val *JellyfinOutboundWebSocketMessage) *NullableJellyfinOutboundWebSocketMessage {
	return &NullableJellyfinOutboundWebSocketMessage{value: val, isSet: true}
}

func (v NullableJellyfinOutboundWebSocketMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinOutboundWebSocketMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


