/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
)

// checks if the JellyfinDefaultDirectoryBrowserInfoDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JellyfinDefaultDirectoryBrowserInfoDto{}

// JellyfinDefaultDirectoryBrowserInfoDto Default directory browser info.
type JellyfinDefaultDirectoryBrowserInfoDto struct {
	// Gets or sets the path.
	Path NullableString `json:"Path,omitempty"`
}

// NewJellyfinDefaultDirectoryBrowserInfoDto instantiates a new JellyfinDefaultDirectoryBrowserInfoDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJellyfinDefaultDirectoryBrowserInfoDto() *JellyfinDefaultDirectoryBrowserInfoDto {
	this := JellyfinDefaultDirectoryBrowserInfoDto{}
	return &this
}

// NewJellyfinDefaultDirectoryBrowserInfoDtoWithDefaults instantiates a new JellyfinDefaultDirectoryBrowserInfoDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJellyfinDefaultDirectoryBrowserInfoDtoWithDefaults() *JellyfinDefaultDirectoryBrowserInfoDto {
	this := JellyfinDefaultDirectoryBrowserInfoDto{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JellyfinDefaultDirectoryBrowserInfoDto) GetPath() string {
	if o == nil || IsNil(o.Path.Get()) {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JellyfinDefaultDirectoryBrowserInfoDto) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *JellyfinDefaultDirectoryBrowserInfoDto) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *JellyfinDefaultDirectoryBrowserInfoDto) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *JellyfinDefaultDirectoryBrowserInfoDto) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *JellyfinDefaultDirectoryBrowserInfoDto) UnsetPath() {
	o.Path.Unset()
}

func (o JellyfinDefaultDirectoryBrowserInfoDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JellyfinDefaultDirectoryBrowserInfoDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Path.IsSet() {
		toSerialize["Path"] = o.Path.Get()
	}
	return toSerialize, nil
}

type NullableJellyfinDefaultDirectoryBrowserInfoDto struct {
	value *JellyfinDefaultDirectoryBrowserInfoDto
	isSet bool
}

func (v NullableJellyfinDefaultDirectoryBrowserInfoDto) Get() *JellyfinDefaultDirectoryBrowserInfoDto {
	return v.value
}

func (v *NullableJellyfinDefaultDirectoryBrowserInfoDto) Set(val *JellyfinDefaultDirectoryBrowserInfoDto) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinDefaultDirectoryBrowserInfoDto) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinDefaultDirectoryBrowserInfoDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinDefaultDirectoryBrowserInfoDto(val *JellyfinDefaultDirectoryBrowserInfoDto) *NullableJellyfinDefaultDirectoryBrowserInfoDto {
	return &NullableJellyfinDefaultDirectoryBrowserInfoDto{value: val, isSet: true}
}

func (v NullableJellyfinDefaultDirectoryBrowserInfoDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinDefaultDirectoryBrowserInfoDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


