/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
)

// checks if the JellyfinPublicSystemInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JellyfinPublicSystemInfo{}

// JellyfinPublicSystemInfo struct for JellyfinPublicSystemInfo
type JellyfinPublicSystemInfo struct {
	// Gets or sets the local address.
	LocalAddress NullableString `json:"LocalAddress,omitempty"`
	// Gets or sets the name of the server.
	ServerName NullableString `json:"ServerName,omitempty"`
	// Gets or sets the server version.
	Version NullableString `json:"Version,omitempty"`
	// Gets or sets the product name. This is the AssemblyProduct name.
	ProductName NullableString `json:"ProductName,omitempty"`
	// Gets or sets the operating system.
	// Deprecated
	OperatingSystem NullableString `json:"OperatingSystem,omitempty"`
	// Gets or sets the id.
	Id NullableString `json:"Id,omitempty"`
	// Gets or sets a value indicating whether the startup wizard is completed.
	StartupWizardCompleted NullableBool `json:"StartupWizardCompleted,omitempty"`
}

// NewJellyfinPublicSystemInfo instantiates a new JellyfinPublicSystemInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJellyfinPublicSystemInfo() *JellyfinPublicSystemInfo {
	this := JellyfinPublicSystemInfo{}
	return &this
}

// NewJellyfinPublicSystemInfoWithDefaults instantiates a new JellyfinPublicSystemInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJellyfinPublicSystemInfoWithDefaults() *JellyfinPublicSystemInfo {
	this := JellyfinPublicSystemInfo{}
	return &this
}

// GetLocalAddress returns the LocalAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JellyfinPublicSystemInfo) GetLocalAddress() string {
	if o == nil || IsNil(o.LocalAddress.Get()) {
		var ret string
		return ret
	}
	return *o.LocalAddress.Get()
}

// GetLocalAddressOk returns a tuple with the LocalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JellyfinPublicSystemInfo) GetLocalAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalAddress.Get(), o.LocalAddress.IsSet()
}

// HasLocalAddress returns a boolean if a field has been set.
func (o *JellyfinPublicSystemInfo) HasLocalAddress() bool {
	if o != nil && o.LocalAddress.IsSet() {
		return true
	}

	return false
}

// SetLocalAddress gets a reference to the given NullableString and assigns it to the LocalAddress field.
func (o *JellyfinPublicSystemInfo) SetLocalAddress(v string) {
	o.LocalAddress.Set(&v)
}
// SetLocalAddressNil sets the value for LocalAddress to be an explicit nil
func (o *JellyfinPublicSystemInfo) SetLocalAddressNil() {
	o.LocalAddress.Set(nil)
}

// UnsetLocalAddress ensures that no value is present for LocalAddress, not even an explicit nil
func (o *JellyfinPublicSystemInfo) UnsetLocalAddress() {
	o.LocalAddress.Unset()
}

// GetServerName returns the ServerName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JellyfinPublicSystemInfo) GetServerName() string {
	if o == nil || IsNil(o.ServerName.Get()) {
		var ret string
		return ret
	}
	return *o.ServerName.Get()
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JellyfinPublicSystemInfo) GetServerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerName.Get(), o.ServerName.IsSet()
}

// HasServerName returns a boolean if a field has been set.
func (o *JellyfinPublicSystemInfo) HasServerName() bool {
	if o != nil && o.ServerName.IsSet() {
		return true
	}

	return false
}

// SetServerName gets a reference to the given NullableString and assigns it to the ServerName field.
func (o *JellyfinPublicSystemInfo) SetServerName(v string) {
	o.ServerName.Set(&v)
}
// SetServerNameNil sets the value for ServerName to be an explicit nil
func (o *JellyfinPublicSystemInfo) SetServerNameNil() {
	o.ServerName.Set(nil)
}

// UnsetServerName ensures that no value is present for ServerName, not even an explicit nil
func (o *JellyfinPublicSystemInfo) UnsetServerName() {
	o.ServerName.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JellyfinPublicSystemInfo) GetVersion() string {
	if o == nil || IsNil(o.Version.Get()) {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JellyfinPublicSystemInfo) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *JellyfinPublicSystemInfo) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *JellyfinPublicSystemInfo) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *JellyfinPublicSystemInfo) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *JellyfinPublicSystemInfo) UnsetVersion() {
	o.Version.Unset()
}

// GetProductName returns the ProductName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JellyfinPublicSystemInfo) GetProductName() string {
	if o == nil || IsNil(o.ProductName.Get()) {
		var ret string
		return ret
	}
	return *o.ProductName.Get()
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JellyfinPublicSystemInfo) GetProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductName.Get(), o.ProductName.IsSet()
}

// HasProductName returns a boolean if a field has been set.
func (o *JellyfinPublicSystemInfo) HasProductName() bool {
	if o != nil && o.ProductName.IsSet() {
		return true
	}

	return false
}

// SetProductName gets a reference to the given NullableString and assigns it to the ProductName field.
func (o *JellyfinPublicSystemInfo) SetProductName(v string) {
	o.ProductName.Set(&v)
}
// SetProductNameNil sets the value for ProductName to be an explicit nil
func (o *JellyfinPublicSystemInfo) SetProductNameNil() {
	o.ProductName.Set(nil)
}

// UnsetProductName ensures that no value is present for ProductName, not even an explicit nil
func (o *JellyfinPublicSystemInfo) UnsetProductName() {
	o.ProductName.Unset()
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *JellyfinPublicSystemInfo) GetOperatingSystem() string {
	if o == nil || IsNil(o.OperatingSystem.Get()) {
		var ret string
		return ret
	}
	return *o.OperatingSystem.Get()
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *JellyfinPublicSystemInfo) GetOperatingSystemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OperatingSystem.Get(), o.OperatingSystem.IsSet()
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *JellyfinPublicSystemInfo) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem.IsSet() {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given NullableString and assigns it to the OperatingSystem field.
// Deprecated
func (o *JellyfinPublicSystemInfo) SetOperatingSystem(v string) {
	o.OperatingSystem.Set(&v)
}
// SetOperatingSystemNil sets the value for OperatingSystem to be an explicit nil
func (o *JellyfinPublicSystemInfo) SetOperatingSystemNil() {
	o.OperatingSystem.Set(nil)
}

// UnsetOperatingSystem ensures that no value is present for OperatingSystem, not even an explicit nil
func (o *JellyfinPublicSystemInfo) UnsetOperatingSystem() {
	o.OperatingSystem.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JellyfinPublicSystemInfo) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JellyfinPublicSystemInfo) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *JellyfinPublicSystemInfo) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *JellyfinPublicSystemInfo) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *JellyfinPublicSystemInfo) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *JellyfinPublicSystemInfo) UnsetId() {
	o.Id.Unset()
}

// GetStartupWizardCompleted returns the StartupWizardCompleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JellyfinPublicSystemInfo) GetStartupWizardCompleted() bool {
	if o == nil || IsNil(o.StartupWizardCompleted.Get()) {
		var ret bool
		return ret
	}
	return *o.StartupWizardCompleted.Get()
}

// GetStartupWizardCompletedOk returns a tuple with the StartupWizardCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JellyfinPublicSystemInfo) GetStartupWizardCompletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartupWizardCompleted.Get(), o.StartupWizardCompleted.IsSet()
}

// HasStartupWizardCompleted returns a boolean if a field has been set.
func (o *JellyfinPublicSystemInfo) HasStartupWizardCompleted() bool {
	if o != nil && o.StartupWizardCompleted.IsSet() {
		return true
	}

	return false
}

// SetStartupWizardCompleted gets a reference to the given NullableBool and assigns it to the StartupWizardCompleted field.
func (o *JellyfinPublicSystemInfo) SetStartupWizardCompleted(v bool) {
	o.StartupWizardCompleted.Set(&v)
}
// SetStartupWizardCompletedNil sets the value for StartupWizardCompleted to be an explicit nil
func (o *JellyfinPublicSystemInfo) SetStartupWizardCompletedNil() {
	o.StartupWizardCompleted.Set(nil)
}

// UnsetStartupWizardCompleted ensures that no value is present for StartupWizardCompleted, not even an explicit nil
func (o *JellyfinPublicSystemInfo) UnsetStartupWizardCompleted() {
	o.StartupWizardCompleted.Unset()
}

func (o JellyfinPublicSystemInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JellyfinPublicSystemInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.LocalAddress.IsSet() {
		toSerialize["LocalAddress"] = o.LocalAddress.Get()
	}
	if o.ServerName.IsSet() {
		toSerialize["ServerName"] = o.ServerName.Get()
	}
	if o.Version.IsSet() {
		toSerialize["Version"] = o.Version.Get()
	}
	if o.ProductName.IsSet() {
		toSerialize["ProductName"] = o.ProductName.Get()
	}
	if o.OperatingSystem.IsSet() {
		toSerialize["OperatingSystem"] = o.OperatingSystem.Get()
	}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if o.StartupWizardCompleted.IsSet() {
		toSerialize["StartupWizardCompleted"] = o.StartupWizardCompleted.Get()
	}
	return toSerialize, nil
}

type NullableJellyfinPublicSystemInfo struct {
	value *JellyfinPublicSystemInfo
	isSet bool
}

func (v NullableJellyfinPublicSystemInfo) Get() *JellyfinPublicSystemInfo {
	return v.value
}

func (v *NullableJellyfinPublicSystemInfo) Set(val *JellyfinPublicSystemInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinPublicSystemInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinPublicSystemInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinPublicSystemInfo(val *JellyfinPublicSystemInfo) *NullableJellyfinPublicSystemInfo {
	return &NullableJellyfinPublicSystemInfo{value: val, isSet: true}
}

func (v NullableJellyfinPublicSystemInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinPublicSystemInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


