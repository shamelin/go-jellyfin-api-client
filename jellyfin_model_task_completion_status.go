/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
	"fmt"
)

// JellyfinTaskCompletionStatus Enum TaskCompletionStatus.
type JellyfinTaskCompletionStatus string

// List of TaskCompletionStatus
const (
	COMPLETED JellyfinTaskCompletionStatus = "Completed"
	FAILED JellyfinTaskCompletionStatus = "Failed"
	CANCELLED JellyfinTaskCompletionStatus = "Cancelled"
	ABORTED JellyfinTaskCompletionStatus = "Aborted"
)

// All allowed values of JellyfinTaskCompletionStatus enum
var AllowedJellyfinTaskCompletionStatusEnumValues = []JellyfinTaskCompletionStatus{
	"Completed",
	"Failed",
	"Cancelled",
	"Aborted",
}

func (v *JellyfinTaskCompletionStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := JellyfinTaskCompletionStatus(value)
	for _, existing := range AllowedJellyfinTaskCompletionStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid JellyfinTaskCompletionStatus", value)
}

// NewJellyfinTaskCompletionStatusFromValue returns a pointer to a valid JellyfinTaskCompletionStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewJellyfinTaskCompletionStatusFromValue(v string) (*JellyfinTaskCompletionStatus, error) {
	ev := JellyfinTaskCompletionStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for JellyfinTaskCompletionStatus: valid values are %v", v, AllowedJellyfinTaskCompletionStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v JellyfinTaskCompletionStatus) IsValid() bool {
	for _, existing := range AllowedJellyfinTaskCompletionStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TaskCompletionStatus value
func (v JellyfinTaskCompletionStatus) Ptr() *JellyfinTaskCompletionStatus {
	return &v
}

type NullableJellyfinTaskCompletionStatus struct {
	value *JellyfinTaskCompletionStatus
	isSet bool
}

func (v NullableJellyfinTaskCompletionStatus) Get() *JellyfinTaskCompletionStatus {
	return v.value
}

func (v *NullableJellyfinTaskCompletionStatus) Set(val *JellyfinTaskCompletionStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinTaskCompletionStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinTaskCompletionStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinTaskCompletionStatus(val *JellyfinTaskCompletionStatus) *NullableJellyfinTaskCompletionStatus {
	return &NullableJellyfinTaskCompletionStatus{value: val, isSet: true}
}

func (v NullableJellyfinTaskCompletionStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinTaskCompletionStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

