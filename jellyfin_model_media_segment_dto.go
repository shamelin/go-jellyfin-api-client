/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
)

// checks if the JellyfinMediaSegmentDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JellyfinMediaSegmentDto{}

// JellyfinMediaSegmentDto Api model for MediaSegment's.
type JellyfinMediaSegmentDto struct {
	// Gets or sets the id of the media segment.
	Id *string `json:"Id,omitempty"`
	// Gets or sets the id of the associated item.
	ItemId *string `json:"ItemId,omitempty"`
	// Defines the types of content an individual Jellyfin.Data.Entities.MediaSegment represents.
	Type *JellyfinMediaSegmentType `json:"Type,omitempty"`
	// Gets or sets the start of the segment.
	StartTicks *int64 `json:"StartTicks,omitempty"`
	// Gets or sets the end of the segment.
	EndTicks *int64 `json:"EndTicks,omitempty"`
}

// NewJellyfinMediaSegmentDto instantiates a new JellyfinMediaSegmentDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJellyfinMediaSegmentDto() *JellyfinMediaSegmentDto {
	this := JellyfinMediaSegmentDto{}
	return &this
}

// NewJellyfinMediaSegmentDtoWithDefaults instantiates a new JellyfinMediaSegmentDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJellyfinMediaSegmentDtoWithDefaults() *JellyfinMediaSegmentDto {
	this := JellyfinMediaSegmentDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *JellyfinMediaSegmentDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinMediaSegmentDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *JellyfinMediaSegmentDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *JellyfinMediaSegmentDto) SetId(v string) {
	o.Id = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *JellyfinMediaSegmentDto) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinMediaSegmentDto) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *JellyfinMediaSegmentDto) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *JellyfinMediaSegmentDto) SetItemId(v string) {
	o.ItemId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *JellyfinMediaSegmentDto) GetType() JellyfinMediaSegmentType {
	if o == nil || IsNil(o.Type) {
		var ret JellyfinMediaSegmentType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinMediaSegmentDto) GetTypeOk() (*JellyfinMediaSegmentType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *JellyfinMediaSegmentDto) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given JellyfinMediaSegmentType and assigns it to the Type field.
func (o *JellyfinMediaSegmentDto) SetType(v JellyfinMediaSegmentType) {
	o.Type = &v
}

// GetStartTicks returns the StartTicks field value if set, zero value otherwise.
func (o *JellyfinMediaSegmentDto) GetStartTicks() int64 {
	if o == nil || IsNil(o.StartTicks) {
		var ret int64
		return ret
	}
	return *o.StartTicks
}

// GetStartTicksOk returns a tuple with the StartTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinMediaSegmentDto) GetStartTicksOk() (*int64, bool) {
	if o == nil || IsNil(o.StartTicks) {
		return nil, false
	}
	return o.StartTicks, true
}

// HasStartTicks returns a boolean if a field has been set.
func (o *JellyfinMediaSegmentDto) HasStartTicks() bool {
	if o != nil && !IsNil(o.StartTicks) {
		return true
	}

	return false
}

// SetStartTicks gets a reference to the given int64 and assigns it to the StartTicks field.
func (o *JellyfinMediaSegmentDto) SetStartTicks(v int64) {
	o.StartTicks = &v
}

// GetEndTicks returns the EndTicks field value if set, zero value otherwise.
func (o *JellyfinMediaSegmentDto) GetEndTicks() int64 {
	if o == nil || IsNil(o.EndTicks) {
		var ret int64
		return ret
	}
	return *o.EndTicks
}

// GetEndTicksOk returns a tuple with the EndTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinMediaSegmentDto) GetEndTicksOk() (*int64, bool) {
	if o == nil || IsNil(o.EndTicks) {
		return nil, false
	}
	return o.EndTicks, true
}

// HasEndTicks returns a boolean if a field has been set.
func (o *JellyfinMediaSegmentDto) HasEndTicks() bool {
	if o != nil && !IsNil(o.EndTicks) {
		return true
	}

	return false
}

// SetEndTicks gets a reference to the given int64 and assigns it to the EndTicks field.
func (o *JellyfinMediaSegmentDto) SetEndTicks(v int64) {
	o.EndTicks = &v
}

func (o JellyfinMediaSegmentDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JellyfinMediaSegmentDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.ItemId) {
		toSerialize["ItemId"] = o.ItemId
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.StartTicks) {
		toSerialize["StartTicks"] = o.StartTicks
	}
	if !IsNil(o.EndTicks) {
		toSerialize["EndTicks"] = o.EndTicks
	}
	return toSerialize, nil
}

type NullableJellyfinMediaSegmentDto struct {
	value *JellyfinMediaSegmentDto
	isSet bool
}

func (v NullableJellyfinMediaSegmentDto) Get() *JellyfinMediaSegmentDto {
	return v.value
}

func (v *NullableJellyfinMediaSegmentDto) Set(val *JellyfinMediaSegmentDto) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinMediaSegmentDto) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinMediaSegmentDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinMediaSegmentDto(val *JellyfinMediaSegmentDto) *NullableJellyfinMediaSegmentDto {
	return &NullableJellyfinMediaSegmentDto{value: val, isSet: true}
}

func (v NullableJellyfinMediaSegmentDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinMediaSegmentDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


