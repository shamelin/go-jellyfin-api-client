/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
)

// checks if the JellyfinActivityLogEntryStopMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JellyfinActivityLogEntryStopMessage{}

// JellyfinActivityLogEntryStopMessage Activity log entry stop message.
type JellyfinActivityLogEntryStopMessage struct {
	// The different kinds of messages that are used in the WebSocket api.
	MessageType *JellyfinSessionMessageType `json:"MessageType,omitempty"`
}

// NewJellyfinActivityLogEntryStopMessage instantiates a new JellyfinActivityLogEntryStopMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJellyfinActivityLogEntryStopMessage() *JellyfinActivityLogEntryStopMessage {
	this := JellyfinActivityLogEntryStopMessage{}
	return &this
}

// NewJellyfinActivityLogEntryStopMessageWithDefaults instantiates a new JellyfinActivityLogEntryStopMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJellyfinActivityLogEntryStopMessageWithDefaults() *JellyfinActivityLogEntryStopMessage {
	this := JellyfinActivityLogEntryStopMessage{}
	return &this
}

// GetMessageType returns the MessageType field value if set, zero value otherwise.
func (o *JellyfinActivityLogEntryStopMessage) GetMessageType() JellyfinSessionMessageType {
	if o == nil || IsNil(o.MessageType) {
		var ret JellyfinSessionMessageType
		return ret
	}
	return *o.MessageType
}

// GetMessageTypeOk returns a tuple with the MessageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinActivityLogEntryStopMessage) GetMessageTypeOk() (*JellyfinSessionMessageType, bool) {
	if o == nil || IsNil(o.MessageType) {
		return nil, false
	}
	return o.MessageType, true
}

// HasMessageType returns a boolean if a field has been set.
func (o *JellyfinActivityLogEntryStopMessage) HasMessageType() bool {
	if o != nil && !IsNil(o.MessageType) {
		return true
	}

	return false
}

// SetMessageType gets a reference to the given JellyfinSessionMessageType and assigns it to the MessageType field.
func (o *JellyfinActivityLogEntryStopMessage) SetMessageType(v JellyfinSessionMessageType) {
	o.MessageType = &v
}

func (o JellyfinActivityLogEntryStopMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JellyfinActivityLogEntryStopMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessageType) {
		toSerialize["MessageType"] = o.MessageType
	}
	return toSerialize, nil
}

type NullableJellyfinActivityLogEntryStopMessage struct {
	value *JellyfinActivityLogEntryStopMessage
	isSet bool
}

func (v NullableJellyfinActivityLogEntryStopMessage) Get() *JellyfinActivityLogEntryStopMessage {
	return v.value
}

func (v *NullableJellyfinActivityLogEntryStopMessage) Set(val *JellyfinActivityLogEntryStopMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinActivityLogEntryStopMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinActivityLogEntryStopMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinActivityLogEntryStopMessage(val *JellyfinActivityLogEntryStopMessage) *NullableJellyfinActivityLogEntryStopMessage {
	return &NullableJellyfinActivityLogEntryStopMessage{value: val, isSet: true}
}

func (v NullableJellyfinActivityLogEntryStopMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinActivityLogEntryStopMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


