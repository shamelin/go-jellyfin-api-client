/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the JellyfinQuickConnectDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JellyfinQuickConnectDto{}

// JellyfinQuickConnectDto The quick connect request body.
type JellyfinQuickConnectDto struct {
	// Gets or sets the quick connect secret.
	Secret string `json:"Secret"`
}

type _JellyfinQuickConnectDto JellyfinQuickConnectDto

// NewJellyfinQuickConnectDto instantiates a new JellyfinQuickConnectDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJellyfinQuickConnectDto(secret string) *JellyfinQuickConnectDto {
	this := JellyfinQuickConnectDto{}
	this.Secret = secret
	return &this
}

// NewJellyfinQuickConnectDtoWithDefaults instantiates a new JellyfinQuickConnectDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJellyfinQuickConnectDtoWithDefaults() *JellyfinQuickConnectDto {
	this := JellyfinQuickConnectDto{}
	return &this
}

// GetSecret returns the Secret field value
func (o *JellyfinQuickConnectDto) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *JellyfinQuickConnectDto) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *JellyfinQuickConnectDto) SetSecret(v string) {
	o.Secret = v
}

func (o JellyfinQuickConnectDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JellyfinQuickConnectDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Secret"] = o.Secret
	return toSerialize, nil
}

func (o *JellyfinQuickConnectDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Secret",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varJellyfinQuickConnectDto := _JellyfinQuickConnectDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varJellyfinQuickConnectDto)

	if err != nil {
		return err
	}

	*o = JellyfinQuickConnectDto(varJellyfinQuickConnectDto)

	return err
}

type NullableJellyfinQuickConnectDto struct {
	value *JellyfinQuickConnectDto
	isSet bool
}

func (v NullableJellyfinQuickConnectDto) Get() *JellyfinQuickConnectDto {
	return v.value
}

func (v *NullableJellyfinQuickConnectDto) Set(val *JellyfinQuickConnectDto) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinQuickConnectDto) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinQuickConnectDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinQuickConnectDto(val *JellyfinQuickConnectDto) *NullableJellyfinQuickConnectDto {
	return &NullableJellyfinQuickConnectDto{value: val, isSet: true}
}

func (v NullableJellyfinQuickConnectDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinQuickConnectDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


