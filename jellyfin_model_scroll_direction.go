/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
	"fmt"
)

// JellyfinScrollDirection An enum representing the axis that should be scrolled.
type JellyfinScrollDirection string

// List of ScrollDirection
const (
	HORIZONTAL JellyfinScrollDirection = "Horizontal"
	VERTICAL JellyfinScrollDirection = "Vertical"
)

// All allowed values of JellyfinScrollDirection enum
var AllowedJellyfinScrollDirectionEnumValues = []JellyfinScrollDirection{
	"Horizontal",
	"Vertical",
}

func (v *JellyfinScrollDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := JellyfinScrollDirection(value)
	for _, existing := range AllowedJellyfinScrollDirectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid JellyfinScrollDirection", value)
}

// NewJellyfinScrollDirectionFromValue returns a pointer to a valid JellyfinScrollDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewJellyfinScrollDirectionFromValue(v string) (*JellyfinScrollDirection, error) {
	ev := JellyfinScrollDirection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for JellyfinScrollDirection: valid values are %v", v, AllowedJellyfinScrollDirectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v JellyfinScrollDirection) IsValid() bool {
	for _, existing := range AllowedJellyfinScrollDirectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ScrollDirection value
func (v JellyfinScrollDirection) Ptr() *JellyfinScrollDirection {
	return &v
}

type NullableJellyfinScrollDirection struct {
	value *JellyfinScrollDirection
	isSet bool
}

func (v NullableJellyfinScrollDirection) Get() *JellyfinScrollDirection {
	return v.value
}

func (v *NullableJellyfinScrollDirection) Set(val *JellyfinScrollDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinScrollDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinScrollDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinScrollDirection(val *JellyfinScrollDirection) *NullableJellyfinScrollDirection {
	return &NullableJellyfinScrollDirection{value: val, isSet: true}
}

func (v NullableJellyfinScrollDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinScrollDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

