/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
)

// checks if the JellyfinPlayRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JellyfinPlayRequestDto{}

// JellyfinPlayRequestDto Class PlayRequestDto.
type JellyfinPlayRequestDto struct {
	// Gets or sets the playing queue.
	PlayingQueue []string `json:"PlayingQueue,omitempty"`
	// Gets or sets the position of the playing item in the queue.
	PlayingItemPosition *int32 `json:"PlayingItemPosition,omitempty"`
	// Gets or sets the start position ticks.
	StartPositionTicks *int64 `json:"StartPositionTicks,omitempty"`
}

// NewJellyfinPlayRequestDto instantiates a new JellyfinPlayRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJellyfinPlayRequestDto() *JellyfinPlayRequestDto {
	this := JellyfinPlayRequestDto{}
	return &this
}

// NewJellyfinPlayRequestDtoWithDefaults instantiates a new JellyfinPlayRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJellyfinPlayRequestDtoWithDefaults() *JellyfinPlayRequestDto {
	this := JellyfinPlayRequestDto{}
	return &this
}

// GetPlayingQueue returns the PlayingQueue field value if set, zero value otherwise.
func (o *JellyfinPlayRequestDto) GetPlayingQueue() []string {
	if o == nil || IsNil(o.PlayingQueue) {
		var ret []string
		return ret
	}
	return o.PlayingQueue
}

// GetPlayingQueueOk returns a tuple with the PlayingQueue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinPlayRequestDto) GetPlayingQueueOk() ([]string, bool) {
	if o == nil || IsNil(o.PlayingQueue) {
		return nil, false
	}
	return o.PlayingQueue, true
}

// HasPlayingQueue returns a boolean if a field has been set.
func (o *JellyfinPlayRequestDto) HasPlayingQueue() bool {
	if o != nil && !IsNil(o.PlayingQueue) {
		return true
	}

	return false
}

// SetPlayingQueue gets a reference to the given []string and assigns it to the PlayingQueue field.
func (o *JellyfinPlayRequestDto) SetPlayingQueue(v []string) {
	o.PlayingQueue = v
}

// GetPlayingItemPosition returns the PlayingItemPosition field value if set, zero value otherwise.
func (o *JellyfinPlayRequestDto) GetPlayingItemPosition() int32 {
	if o == nil || IsNil(o.PlayingItemPosition) {
		var ret int32
		return ret
	}
	return *o.PlayingItemPosition
}

// GetPlayingItemPositionOk returns a tuple with the PlayingItemPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinPlayRequestDto) GetPlayingItemPositionOk() (*int32, bool) {
	if o == nil || IsNil(o.PlayingItemPosition) {
		return nil, false
	}
	return o.PlayingItemPosition, true
}

// HasPlayingItemPosition returns a boolean if a field has been set.
func (o *JellyfinPlayRequestDto) HasPlayingItemPosition() bool {
	if o != nil && !IsNil(o.PlayingItemPosition) {
		return true
	}

	return false
}

// SetPlayingItemPosition gets a reference to the given int32 and assigns it to the PlayingItemPosition field.
func (o *JellyfinPlayRequestDto) SetPlayingItemPosition(v int32) {
	o.PlayingItemPosition = &v
}

// GetStartPositionTicks returns the StartPositionTicks field value if set, zero value otherwise.
func (o *JellyfinPlayRequestDto) GetStartPositionTicks() int64 {
	if o == nil || IsNil(o.StartPositionTicks) {
		var ret int64
		return ret
	}
	return *o.StartPositionTicks
}

// GetStartPositionTicksOk returns a tuple with the StartPositionTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinPlayRequestDto) GetStartPositionTicksOk() (*int64, bool) {
	if o == nil || IsNil(o.StartPositionTicks) {
		return nil, false
	}
	return o.StartPositionTicks, true
}

// HasStartPositionTicks returns a boolean if a field has been set.
func (o *JellyfinPlayRequestDto) HasStartPositionTicks() bool {
	if o != nil && !IsNil(o.StartPositionTicks) {
		return true
	}

	return false
}

// SetStartPositionTicks gets a reference to the given int64 and assigns it to the StartPositionTicks field.
func (o *JellyfinPlayRequestDto) SetStartPositionTicks(v int64) {
	o.StartPositionTicks = &v
}

func (o JellyfinPlayRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JellyfinPlayRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PlayingQueue) {
		toSerialize["PlayingQueue"] = o.PlayingQueue
	}
	if !IsNil(o.PlayingItemPosition) {
		toSerialize["PlayingItemPosition"] = o.PlayingItemPosition
	}
	if !IsNil(o.StartPositionTicks) {
		toSerialize["StartPositionTicks"] = o.StartPositionTicks
	}
	return toSerialize, nil
}

type NullableJellyfinPlayRequestDto struct {
	value *JellyfinPlayRequestDto
	isSet bool
}

func (v NullableJellyfinPlayRequestDto) Get() *JellyfinPlayRequestDto {
	return v.value
}

func (v *NullableJellyfinPlayRequestDto) Set(val *JellyfinPlayRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinPlayRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinPlayRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinPlayRequestDto(val *JellyfinPlayRequestDto) *NullableJellyfinPlayRequestDto {
	return &NullableJellyfinPlayRequestDto{value: val, isSet: true}
}

func (v NullableJellyfinPlayRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinPlayRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


