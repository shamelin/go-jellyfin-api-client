/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
)

// checks if the JellyfinQueueRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JellyfinQueueRequestDto{}

// JellyfinQueueRequestDto Class QueueRequestDto.
type JellyfinQueueRequestDto struct {
	// Gets or sets the items to enqueue.
	ItemIds []string `json:"ItemIds,omitempty"`
	// Gets or sets the mode in which to add the new items.
	Mode *JellyfinGroupQueueMode `json:"Mode,omitempty"`
}

// NewJellyfinQueueRequestDto instantiates a new JellyfinQueueRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJellyfinQueueRequestDto() *JellyfinQueueRequestDto {
	this := JellyfinQueueRequestDto{}
	return &this
}

// NewJellyfinQueueRequestDtoWithDefaults instantiates a new JellyfinQueueRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJellyfinQueueRequestDtoWithDefaults() *JellyfinQueueRequestDto {
	this := JellyfinQueueRequestDto{}
	return &this
}

// GetItemIds returns the ItemIds field value if set, zero value otherwise.
func (o *JellyfinQueueRequestDto) GetItemIds() []string {
	if o == nil || IsNil(o.ItemIds) {
		var ret []string
		return ret
	}
	return o.ItemIds
}

// GetItemIdsOk returns a tuple with the ItemIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinQueueRequestDto) GetItemIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ItemIds) {
		return nil, false
	}
	return o.ItemIds, true
}

// HasItemIds returns a boolean if a field has been set.
func (o *JellyfinQueueRequestDto) HasItemIds() bool {
	if o != nil && !IsNil(o.ItemIds) {
		return true
	}

	return false
}

// SetItemIds gets a reference to the given []string and assigns it to the ItemIds field.
func (o *JellyfinQueueRequestDto) SetItemIds(v []string) {
	o.ItemIds = v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *JellyfinQueueRequestDto) GetMode() JellyfinGroupQueueMode {
	if o == nil || IsNil(o.Mode) {
		var ret JellyfinGroupQueueMode
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinQueueRequestDto) GetModeOk() (*JellyfinGroupQueueMode, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *JellyfinQueueRequestDto) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given JellyfinGroupQueueMode and assigns it to the Mode field.
func (o *JellyfinQueueRequestDto) SetMode(v JellyfinGroupQueueMode) {
	o.Mode = &v
}

func (o JellyfinQueueRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JellyfinQueueRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemIds) {
		toSerialize["ItemIds"] = o.ItemIds
	}
	if !IsNil(o.Mode) {
		toSerialize["Mode"] = o.Mode
	}
	return toSerialize, nil
}

type NullableJellyfinQueueRequestDto struct {
	value *JellyfinQueueRequestDto
	isSet bool
}

func (v NullableJellyfinQueueRequestDto) Get() *JellyfinQueueRequestDto {
	return v.value
}

func (v *NullableJellyfinQueueRequestDto) Set(val *JellyfinQueueRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinQueueRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinQueueRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinQueueRequestDto(val *JellyfinQueueRequestDto) *NullableJellyfinQueueRequestDto {
	return &NullableJellyfinQueueRequestDto{value: val, isSet: true}
}

func (v NullableJellyfinQueueRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinQueueRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


