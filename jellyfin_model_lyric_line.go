/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
)

// checks if the JellyfinLyricLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JellyfinLyricLine{}

// JellyfinLyricLine Lyric model.
type JellyfinLyricLine struct {
	// Gets the text of this lyric line.
	Text *string `json:"Text,omitempty"`
	// Gets the start time in ticks.
	Start NullableInt64 `json:"Start,omitempty"`
}

// NewJellyfinLyricLine instantiates a new JellyfinLyricLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJellyfinLyricLine() *JellyfinLyricLine {
	this := JellyfinLyricLine{}
	return &this
}

// NewJellyfinLyricLineWithDefaults instantiates a new JellyfinLyricLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJellyfinLyricLineWithDefaults() *JellyfinLyricLine {
	this := JellyfinLyricLine{}
	return &this
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *JellyfinLyricLine) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinLyricLine) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *JellyfinLyricLine) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *JellyfinLyricLine) SetText(v string) {
	o.Text = &v
}

// GetStart returns the Start field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JellyfinLyricLine) GetStart() int64 {
	if o == nil || IsNil(o.Start.Get()) {
		var ret int64
		return ret
	}
	return *o.Start.Get()
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JellyfinLyricLine) GetStartOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Start.Get(), o.Start.IsSet()
}

// HasStart returns a boolean if a field has been set.
func (o *JellyfinLyricLine) HasStart() bool {
	if o != nil && o.Start.IsSet() {
		return true
	}

	return false
}

// SetStart gets a reference to the given NullableInt64 and assigns it to the Start field.
func (o *JellyfinLyricLine) SetStart(v int64) {
	o.Start.Set(&v)
}
// SetStartNil sets the value for Start to be an explicit nil
func (o *JellyfinLyricLine) SetStartNil() {
	o.Start.Set(nil)
}

// UnsetStart ensures that no value is present for Start, not even an explicit nil
func (o *JellyfinLyricLine) UnsetStart() {
	o.Start.Unset()
}

func (o JellyfinLyricLine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JellyfinLyricLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Text) {
		toSerialize["Text"] = o.Text
	}
	if o.Start.IsSet() {
		toSerialize["Start"] = o.Start.Get()
	}
	return toSerialize, nil
}

type NullableJellyfinLyricLine struct {
	value *JellyfinLyricLine
	isSet bool
}

func (v NullableJellyfinLyricLine) Get() *JellyfinLyricLine {
	return v.value
}

func (v *NullableJellyfinLyricLine) Set(val *JellyfinLyricLine) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinLyricLine) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinLyricLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinLyricLine(val *JellyfinLyricLine) *NullableJellyfinLyricLine {
	return &NullableJellyfinLyricLine{value: val, isSet: true}
}

func (v NullableJellyfinLyricLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinLyricLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


