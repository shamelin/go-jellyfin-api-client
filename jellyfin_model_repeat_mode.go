/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
	"fmt"
)

// JellyfinRepeatMode the model 'JellyfinRepeatMode'
type JellyfinRepeatMode string

// List of RepeatMode
const (
	JELLYFINREPEATMODE_REPEAT_NONE JellyfinRepeatMode = "RepeatNone"
	JELLYFINREPEATMODE_REPEAT_ALL JellyfinRepeatMode = "RepeatAll"
	JELLYFINREPEATMODE_REPEAT_ONE JellyfinRepeatMode = "RepeatOne"
)

// All allowed values of JellyfinRepeatMode enum
var AllowedJellyfinRepeatModeEnumValues = []JellyfinRepeatMode{
	"RepeatNone",
	"RepeatAll",
	"RepeatOne",
}

func (v *JellyfinRepeatMode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := JellyfinRepeatMode(value)
	for _, existing := range AllowedJellyfinRepeatModeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid JellyfinRepeatMode", value)
}

// NewJellyfinRepeatModeFromValue returns a pointer to a valid JellyfinRepeatMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewJellyfinRepeatModeFromValue(v string) (*JellyfinRepeatMode, error) {
	ev := JellyfinRepeatMode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for JellyfinRepeatMode: valid values are %v", v, AllowedJellyfinRepeatModeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v JellyfinRepeatMode) IsValid() bool {
	for _, existing := range AllowedJellyfinRepeatModeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RepeatMode value
func (v JellyfinRepeatMode) Ptr() *JellyfinRepeatMode {
	return &v
}

type NullableJellyfinRepeatMode struct {
	value *JellyfinRepeatMode
	isSet bool
}

func (v NullableJellyfinRepeatMode) Get() *JellyfinRepeatMode {
	return v.value
}

func (v *NullableJellyfinRepeatMode) Set(val *JellyfinRepeatMode) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinRepeatMode) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinRepeatMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinRepeatMode(val *JellyfinRepeatMode) *NullableJellyfinRepeatMode {
	return &NullableJellyfinRepeatMode{value: val, isSet: true}
}

func (v NullableJellyfinRepeatMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinRepeatMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

