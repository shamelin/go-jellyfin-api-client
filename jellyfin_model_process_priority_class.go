/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
	"fmt"
)

// JellyfinProcessPriorityClass the model 'JellyfinProcessPriorityClass'
type JellyfinProcessPriorityClass string

// List of ProcessPriorityClass
const (
	NORMAL JellyfinProcessPriorityClass = "Normal"
	IDLE JellyfinProcessPriorityClass = "Idle"
	HIGH JellyfinProcessPriorityClass = "High"
	REAL_TIME JellyfinProcessPriorityClass = "RealTime"
	BELOW_NORMAL JellyfinProcessPriorityClass = "BelowNormal"
	ABOVE_NORMAL JellyfinProcessPriorityClass = "AboveNormal"
)

// All allowed values of JellyfinProcessPriorityClass enum
var AllowedJellyfinProcessPriorityClassEnumValues = []JellyfinProcessPriorityClass{
	"Normal",
	"Idle",
	"High",
	"RealTime",
	"BelowNormal",
	"AboveNormal",
}

func (v *JellyfinProcessPriorityClass) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := JellyfinProcessPriorityClass(value)
	for _, existing := range AllowedJellyfinProcessPriorityClassEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid JellyfinProcessPriorityClass", value)
}

// NewJellyfinProcessPriorityClassFromValue returns a pointer to a valid JellyfinProcessPriorityClass
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewJellyfinProcessPriorityClassFromValue(v string) (*JellyfinProcessPriorityClass, error) {
	ev := JellyfinProcessPriorityClass(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for JellyfinProcessPriorityClass: valid values are %v", v, AllowedJellyfinProcessPriorityClassEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v JellyfinProcessPriorityClass) IsValid() bool {
	for _, existing := range AllowedJellyfinProcessPriorityClassEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ProcessPriorityClass value
func (v JellyfinProcessPriorityClass) Ptr() *JellyfinProcessPriorityClass {
	return &v
}

type NullableJellyfinProcessPriorityClass struct {
	value *JellyfinProcessPriorityClass
	isSet bool
}

func (v NullableJellyfinProcessPriorityClass) Get() *JellyfinProcessPriorityClass {
	return v.value
}

func (v *NullableJellyfinProcessPriorityClass) Set(val *JellyfinProcessPriorityClass) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinProcessPriorityClass) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinProcessPriorityClass) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinProcessPriorityClass(val *JellyfinProcessPriorityClass) *NullableJellyfinProcessPriorityClass {
	return &NullableJellyfinProcessPriorityClass{value: val, isSet: true}
}

func (v NullableJellyfinProcessPriorityClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinProcessPriorityClass) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

