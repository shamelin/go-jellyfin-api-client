/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
)

// checks if the JellyfinPlaylistCreationResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JellyfinPlaylistCreationResult{}

// JellyfinPlaylistCreationResult struct for JellyfinPlaylistCreationResult
type JellyfinPlaylistCreationResult struct {
	Id *string `json:"Id,omitempty"`
}

// NewJellyfinPlaylistCreationResult instantiates a new JellyfinPlaylistCreationResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJellyfinPlaylistCreationResult() *JellyfinPlaylistCreationResult {
	this := JellyfinPlaylistCreationResult{}
	return &this
}

// NewJellyfinPlaylistCreationResultWithDefaults instantiates a new JellyfinPlaylistCreationResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJellyfinPlaylistCreationResultWithDefaults() *JellyfinPlaylistCreationResult {
	this := JellyfinPlaylistCreationResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *JellyfinPlaylistCreationResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinPlaylistCreationResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *JellyfinPlaylistCreationResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *JellyfinPlaylistCreationResult) SetId(v string) {
	o.Id = &v
}

func (o JellyfinPlaylistCreationResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JellyfinPlaylistCreationResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	return toSerialize, nil
}

type NullableJellyfinPlaylistCreationResult struct {
	value *JellyfinPlaylistCreationResult
	isSet bool
}

func (v NullableJellyfinPlaylistCreationResult) Get() *JellyfinPlaylistCreationResult {
	return v.value
}

func (v *NullableJellyfinPlaylistCreationResult) Set(val *JellyfinPlaylistCreationResult) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinPlaylistCreationResult) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinPlaylistCreationResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinPlaylistCreationResult(val *JellyfinPlaylistCreationResult) *NullableJellyfinPlaylistCreationResult {
	return &NullableJellyfinPlaylistCreationResult{value: val, isSet: true}
}

func (v NullableJellyfinPlaylistCreationResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinPlaylistCreationResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


