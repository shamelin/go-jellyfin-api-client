/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
)

// checks if the JellyfinContainerProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JellyfinContainerProfile{}

// JellyfinContainerProfile Defines the MediaBrowser.Model.Dlna.ContainerProfile.
type JellyfinContainerProfile struct {
	// Gets or sets the MediaBrowser.Model.Dlna.DlnaProfileType which this container must meet.
	Type *JellyfinDlnaProfileType `json:"Type,omitempty"`
	// Gets or sets the list of MediaBrowser.Model.Dlna.ProfileCondition which this container will be applied to.
	Conditions []JellyfinProfileCondition `json:"Conditions,omitempty"`
	// Gets or sets the container(s) which this container must meet.
	Container NullableString `json:"Container,omitempty"`
	// Gets or sets the sub container(s) which this container must meet.
	SubContainer NullableString `json:"SubContainer,omitempty"`
}

// NewJellyfinContainerProfile instantiates a new JellyfinContainerProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJellyfinContainerProfile() *JellyfinContainerProfile {
	this := JellyfinContainerProfile{}
	return &this
}

// NewJellyfinContainerProfileWithDefaults instantiates a new JellyfinContainerProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJellyfinContainerProfileWithDefaults() *JellyfinContainerProfile {
	this := JellyfinContainerProfile{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *JellyfinContainerProfile) GetType() JellyfinDlnaProfileType {
	if o == nil || IsNil(o.Type) {
		var ret JellyfinDlnaProfileType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinContainerProfile) GetTypeOk() (*JellyfinDlnaProfileType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *JellyfinContainerProfile) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given JellyfinDlnaProfileType and assigns it to the Type field.
func (o *JellyfinContainerProfile) SetType(v JellyfinDlnaProfileType) {
	o.Type = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *JellyfinContainerProfile) GetConditions() []JellyfinProfileCondition {
	if o == nil || IsNil(o.Conditions) {
		var ret []JellyfinProfileCondition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinContainerProfile) GetConditionsOk() ([]JellyfinProfileCondition, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *JellyfinContainerProfile) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []JellyfinProfileCondition and assigns it to the Conditions field.
func (o *JellyfinContainerProfile) SetConditions(v []JellyfinProfileCondition) {
	o.Conditions = v
}

// GetContainer returns the Container field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JellyfinContainerProfile) GetContainer() string {
	if o == nil || IsNil(o.Container.Get()) {
		var ret string
		return ret
	}
	return *o.Container.Get()
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JellyfinContainerProfile) GetContainerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Container.Get(), o.Container.IsSet()
}

// HasContainer returns a boolean if a field has been set.
func (o *JellyfinContainerProfile) HasContainer() bool {
	if o != nil && o.Container.IsSet() {
		return true
	}

	return false
}

// SetContainer gets a reference to the given NullableString and assigns it to the Container field.
func (o *JellyfinContainerProfile) SetContainer(v string) {
	o.Container.Set(&v)
}
// SetContainerNil sets the value for Container to be an explicit nil
func (o *JellyfinContainerProfile) SetContainerNil() {
	o.Container.Set(nil)
}

// UnsetContainer ensures that no value is present for Container, not even an explicit nil
func (o *JellyfinContainerProfile) UnsetContainer() {
	o.Container.Unset()
}

// GetSubContainer returns the SubContainer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JellyfinContainerProfile) GetSubContainer() string {
	if o == nil || IsNil(o.SubContainer.Get()) {
		var ret string
		return ret
	}
	return *o.SubContainer.Get()
}

// GetSubContainerOk returns a tuple with the SubContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JellyfinContainerProfile) GetSubContainerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubContainer.Get(), o.SubContainer.IsSet()
}

// HasSubContainer returns a boolean if a field has been set.
func (o *JellyfinContainerProfile) HasSubContainer() bool {
	if o != nil && o.SubContainer.IsSet() {
		return true
	}

	return false
}

// SetSubContainer gets a reference to the given NullableString and assigns it to the SubContainer field.
func (o *JellyfinContainerProfile) SetSubContainer(v string) {
	o.SubContainer.Set(&v)
}
// SetSubContainerNil sets the value for SubContainer to be an explicit nil
func (o *JellyfinContainerProfile) SetSubContainerNil() {
	o.SubContainer.Set(nil)
}

// UnsetSubContainer ensures that no value is present for SubContainer, not even an explicit nil
func (o *JellyfinContainerProfile) UnsetSubContainer() {
	o.SubContainer.Unset()
}

func (o JellyfinContainerProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JellyfinContainerProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.Conditions) {
		toSerialize["Conditions"] = o.Conditions
	}
	if o.Container.IsSet() {
		toSerialize["Container"] = o.Container.Get()
	}
	if o.SubContainer.IsSet() {
		toSerialize["SubContainer"] = o.SubContainer.Get()
	}
	return toSerialize, nil
}

type NullableJellyfinContainerProfile struct {
	value *JellyfinContainerProfile
	isSet bool
}

func (v NullableJellyfinContainerProfile) Get() *JellyfinContainerProfile {
	return v.value
}

func (v *NullableJellyfinContainerProfile) Set(val *JellyfinContainerProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinContainerProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinContainerProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinContainerProfile(val *JellyfinContainerProfile) *NullableJellyfinContainerProfile {
	return &NullableJellyfinContainerProfile{value: val, isSet: true}
}

func (v NullableJellyfinContainerProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinContainerProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


