/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
)

// checks if the JellyfinSetShuffleModeRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JellyfinSetShuffleModeRequestDto{}

// JellyfinSetShuffleModeRequestDto Class SetShuffleModeRequestDto.
type JellyfinSetShuffleModeRequestDto struct {
	// Gets or sets the shuffle mode.
	Mode *JellyfinGroupShuffleMode `json:"Mode,omitempty"`
}

// NewJellyfinSetShuffleModeRequestDto instantiates a new JellyfinSetShuffleModeRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJellyfinSetShuffleModeRequestDto() *JellyfinSetShuffleModeRequestDto {
	this := JellyfinSetShuffleModeRequestDto{}
	return &this
}

// NewJellyfinSetShuffleModeRequestDtoWithDefaults instantiates a new JellyfinSetShuffleModeRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJellyfinSetShuffleModeRequestDtoWithDefaults() *JellyfinSetShuffleModeRequestDto {
	this := JellyfinSetShuffleModeRequestDto{}
	return &this
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *JellyfinSetShuffleModeRequestDto) GetMode() JellyfinGroupShuffleMode {
	if o == nil || IsNil(o.Mode) {
		var ret JellyfinGroupShuffleMode
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinSetShuffleModeRequestDto) GetModeOk() (*JellyfinGroupShuffleMode, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *JellyfinSetShuffleModeRequestDto) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given JellyfinGroupShuffleMode and assigns it to the Mode field.
func (o *JellyfinSetShuffleModeRequestDto) SetMode(v JellyfinGroupShuffleMode) {
	o.Mode = &v
}

func (o JellyfinSetShuffleModeRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JellyfinSetShuffleModeRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mode) {
		toSerialize["Mode"] = o.Mode
	}
	return toSerialize, nil
}

type NullableJellyfinSetShuffleModeRequestDto struct {
	value *JellyfinSetShuffleModeRequestDto
	isSet bool
}

func (v NullableJellyfinSetShuffleModeRequestDto) Get() *JellyfinSetShuffleModeRequestDto {
	return v.value
}

func (v *NullableJellyfinSetShuffleModeRequestDto) Set(val *JellyfinSetShuffleModeRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinSetShuffleModeRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinSetShuffleModeRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinSetShuffleModeRequestDto(val *JellyfinSetShuffleModeRequestDto) *NullableJellyfinSetShuffleModeRequestDto {
	return &NullableJellyfinSetShuffleModeRequestDto{value: val, isSet: true}
}

func (v NullableJellyfinSetShuffleModeRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinSetShuffleModeRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


