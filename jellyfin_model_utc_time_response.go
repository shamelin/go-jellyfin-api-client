/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
	"time"
)

// checks if the JellyfinUtcTimeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JellyfinUtcTimeResponse{}

// JellyfinUtcTimeResponse Class UtcTimeResponse.
type JellyfinUtcTimeResponse struct {
	// Gets the UTC time when request has been received.
	RequestReceptionTime *time.Time `json:"RequestReceptionTime,omitempty"`
	// Gets the UTC time when response has been sent.
	ResponseTransmissionTime *time.Time `json:"ResponseTransmissionTime,omitempty"`
}

// NewJellyfinUtcTimeResponse instantiates a new JellyfinUtcTimeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJellyfinUtcTimeResponse() *JellyfinUtcTimeResponse {
	this := JellyfinUtcTimeResponse{}
	return &this
}

// NewJellyfinUtcTimeResponseWithDefaults instantiates a new JellyfinUtcTimeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJellyfinUtcTimeResponseWithDefaults() *JellyfinUtcTimeResponse {
	this := JellyfinUtcTimeResponse{}
	return &this
}

// GetRequestReceptionTime returns the RequestReceptionTime field value if set, zero value otherwise.
func (o *JellyfinUtcTimeResponse) GetRequestReceptionTime() time.Time {
	if o == nil || IsNil(o.RequestReceptionTime) {
		var ret time.Time
		return ret
	}
	return *o.RequestReceptionTime
}

// GetRequestReceptionTimeOk returns a tuple with the RequestReceptionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinUtcTimeResponse) GetRequestReceptionTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RequestReceptionTime) {
		return nil, false
	}
	return o.RequestReceptionTime, true
}

// HasRequestReceptionTime returns a boolean if a field has been set.
func (o *JellyfinUtcTimeResponse) HasRequestReceptionTime() bool {
	if o != nil && !IsNil(o.RequestReceptionTime) {
		return true
	}

	return false
}

// SetRequestReceptionTime gets a reference to the given time.Time and assigns it to the RequestReceptionTime field.
func (o *JellyfinUtcTimeResponse) SetRequestReceptionTime(v time.Time) {
	o.RequestReceptionTime = &v
}

// GetResponseTransmissionTime returns the ResponseTransmissionTime field value if set, zero value otherwise.
func (o *JellyfinUtcTimeResponse) GetResponseTransmissionTime() time.Time {
	if o == nil || IsNil(o.ResponseTransmissionTime) {
		var ret time.Time
		return ret
	}
	return *o.ResponseTransmissionTime
}

// GetResponseTransmissionTimeOk returns a tuple with the ResponseTransmissionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinUtcTimeResponse) GetResponseTransmissionTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ResponseTransmissionTime) {
		return nil, false
	}
	return o.ResponseTransmissionTime, true
}

// HasResponseTransmissionTime returns a boolean if a field has been set.
func (o *JellyfinUtcTimeResponse) HasResponseTransmissionTime() bool {
	if o != nil && !IsNil(o.ResponseTransmissionTime) {
		return true
	}

	return false
}

// SetResponseTransmissionTime gets a reference to the given time.Time and assigns it to the ResponseTransmissionTime field.
func (o *JellyfinUtcTimeResponse) SetResponseTransmissionTime(v time.Time) {
	o.ResponseTransmissionTime = &v
}

func (o JellyfinUtcTimeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JellyfinUtcTimeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestReceptionTime) {
		toSerialize["RequestReceptionTime"] = o.RequestReceptionTime
	}
	if !IsNil(o.ResponseTransmissionTime) {
		toSerialize["ResponseTransmissionTime"] = o.ResponseTransmissionTime
	}
	return toSerialize, nil
}

type NullableJellyfinUtcTimeResponse struct {
	value *JellyfinUtcTimeResponse
	isSet bool
}

func (v NullableJellyfinUtcTimeResponse) Get() *JellyfinUtcTimeResponse {
	return v.value
}

func (v *NullableJellyfinUtcTimeResponse) Set(val *JellyfinUtcTimeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinUtcTimeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinUtcTimeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinUtcTimeResponse(val *JellyfinUtcTimeResponse) *NullableJellyfinUtcTimeResponse {
	return &NullableJellyfinUtcTimeResponse{value: val, isSet: true}
}

func (v NullableJellyfinUtcTimeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinUtcTimeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


