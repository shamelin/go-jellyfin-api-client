/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
	"fmt"
)

// JellyfinMediaSegmentType Defines the types of content an individual Jellyfin.Data.Entities.MediaSegment represents.
type JellyfinMediaSegmentType string

// List of MediaSegmentType
const (
	UNKNOWN JellyfinMediaSegmentType = "Unknown"
	COMMERCIAL JellyfinMediaSegmentType = "Commercial"
	PREVIEW JellyfinMediaSegmentType = "Preview"
	RECAP JellyfinMediaSegmentType = "Recap"
	OUTRO JellyfinMediaSegmentType = "Outro"
	INTRO JellyfinMediaSegmentType = "Intro"
)

// All allowed values of JellyfinMediaSegmentType enum
var AllowedJellyfinMediaSegmentTypeEnumValues = []JellyfinMediaSegmentType{
	"Unknown",
	"Commercial",
	"Preview",
	"Recap",
	"Outro",
	"Intro",
}

func (v *JellyfinMediaSegmentType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := JellyfinMediaSegmentType(value)
	for _, existing := range AllowedJellyfinMediaSegmentTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid JellyfinMediaSegmentType", value)
}

// NewJellyfinMediaSegmentTypeFromValue returns a pointer to a valid JellyfinMediaSegmentType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewJellyfinMediaSegmentTypeFromValue(v string) (*JellyfinMediaSegmentType, error) {
	ev := JellyfinMediaSegmentType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for JellyfinMediaSegmentType: valid values are %v", v, AllowedJellyfinMediaSegmentTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v JellyfinMediaSegmentType) IsValid() bool {
	for _, existing := range AllowedJellyfinMediaSegmentTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MediaSegmentType value
func (v JellyfinMediaSegmentType) Ptr() *JellyfinMediaSegmentType {
	return &v
}

type NullableJellyfinMediaSegmentType struct {
	value *JellyfinMediaSegmentType
	isSet bool
}

func (v NullableJellyfinMediaSegmentType) Get() *JellyfinMediaSegmentType {
	return v.value
}

func (v *NullableJellyfinMediaSegmentType) Set(val *JellyfinMediaSegmentType) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinMediaSegmentType) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinMediaSegmentType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinMediaSegmentType(val *JellyfinMediaSegmentType) *NullableJellyfinMediaSegmentType {
	return &NullableJellyfinMediaSegmentType{value: val, isSet: true}
}

func (v NullableJellyfinMediaSegmentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinMediaSegmentType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

