/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jellyfin

import (
	"encoding/json"
)

// checks if the JellyfinIgnoreWaitRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JellyfinIgnoreWaitRequestDto{}

// JellyfinIgnoreWaitRequestDto Class IgnoreWaitRequestDto.
type JellyfinIgnoreWaitRequestDto struct {
	// Gets or sets a value indicating whether the client should be ignored.
	IgnoreWait *bool `json:"IgnoreWait,omitempty"`
}

// NewJellyfinIgnoreWaitRequestDto instantiates a new JellyfinIgnoreWaitRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJellyfinIgnoreWaitRequestDto() *JellyfinIgnoreWaitRequestDto {
	this := JellyfinIgnoreWaitRequestDto{}
	return &this
}

// NewJellyfinIgnoreWaitRequestDtoWithDefaults instantiates a new JellyfinIgnoreWaitRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJellyfinIgnoreWaitRequestDtoWithDefaults() *JellyfinIgnoreWaitRequestDto {
	this := JellyfinIgnoreWaitRequestDto{}
	return &this
}

// GetIgnoreWait returns the IgnoreWait field value if set, zero value otherwise.
func (o *JellyfinIgnoreWaitRequestDto) GetIgnoreWait() bool {
	if o == nil || IsNil(o.IgnoreWait) {
		var ret bool
		return ret
	}
	return *o.IgnoreWait
}

// GetIgnoreWaitOk returns a tuple with the IgnoreWait field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JellyfinIgnoreWaitRequestDto) GetIgnoreWaitOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreWait) {
		return nil, false
	}
	return o.IgnoreWait, true
}

// HasIgnoreWait returns a boolean if a field has been set.
func (o *JellyfinIgnoreWaitRequestDto) HasIgnoreWait() bool {
	if o != nil && !IsNil(o.IgnoreWait) {
		return true
	}

	return false
}

// SetIgnoreWait gets a reference to the given bool and assigns it to the IgnoreWait field.
func (o *JellyfinIgnoreWaitRequestDto) SetIgnoreWait(v bool) {
	o.IgnoreWait = &v
}

func (o JellyfinIgnoreWaitRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JellyfinIgnoreWaitRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IgnoreWait) {
		toSerialize["IgnoreWait"] = o.IgnoreWait
	}
	return toSerialize, nil
}

type NullableJellyfinIgnoreWaitRequestDto struct {
	value *JellyfinIgnoreWaitRequestDto
	isSet bool
}

func (v NullableJellyfinIgnoreWaitRequestDto) Get() *JellyfinIgnoreWaitRequestDto {
	return v.value
}

func (v *NullableJellyfinIgnoreWaitRequestDto) Set(val *JellyfinIgnoreWaitRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableJellyfinIgnoreWaitRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableJellyfinIgnoreWaitRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJellyfinIgnoreWaitRequestDto(val *JellyfinIgnoreWaitRequestDto) *NullableJellyfinIgnoreWaitRequestDto {
	return &NullableJellyfinIgnoreWaitRequestDto{value: val, isSet: true}
}

func (v NullableJellyfinIgnoreWaitRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJellyfinIgnoreWaitRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


